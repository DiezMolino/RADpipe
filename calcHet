#!/usr/bin/env bash

# calcHet
#
# Version 1.0 (13 January, 2017)
# License: GNU GPLv2
# To report bugs or errors, please contact Daren Card (dcard@uta.edu).
# This script is provided as-is, with no support and no guarantee of
# proper or desirable functioning.

# Script that calculates heterozygosity within a
# population using a VCF file.
#
# User must specify a comma-delimited list of sample IDs
# for the population (must correspond to IDs in VCF),
# the minimum number of sampled alleles in the population (if
# less alleles were sampled, population is considered missing),
# and a VCF file.
#
# This script was created using BCFtools v. 1.3.1, but should work
# with any version > 1. BCFtools must be stored in path as 'bcftools'.
# The VCF file must have the tags AN and AC in the INFO field.
#
# Output is a tab-delimited text file written to STDOUT, with
# the following columns:
# 1. chromosome/scaffold
# 2. variant position
# 3. reference genome allele
# 4. alternative allele
# 5. number of sampled alleles in population
# 6. reference allele frequency in population
# 7. observed heterozygosity
# 8. expected heterozygosity
#
# Strict Usage:
# calcHet <pop_list> <pop_n> <variants.vcf>
#
# Example: Populations with two samples (4 alleles),
# where sites with less than 2 sampled alleles (50%) 
# is considered missing.
# calcHet sample1,sample2 2 variants.vcf.gz

bcftools view -s $1 $3 | \
	bcftools query -f '%CHROM\t%POS\t%REF\t%ALT\t%AN\t%AC[\t%GT]\n' - | \
        awk -v OFS="\t" -v x="$2" \
                '{ if ($5<x) \
			print $1, $2, $3, $4, $5, $6, "NA", "NA"; \
		else \
                        { het = 0; miss = 0; hom1 = 0; hom2 = 0; total = 0; \
			for (i=7; i<=NF; i++) \
				if ($i == "0/1" || $i == "1/0") \
					het += 1; \
				else if ($i == "./.") \
					miss += 1; \
				else if ($i == "0/0") \
					hom1 += 1; \
				else \
					hom2 += 1; \
			total = het+hom1+hom2; p = (2*hom1+(het))/(2*total); q = 1 - p; \
			print $1, $2, $3, $4, $5, $6, het/total, 1-(p**2)-(q**2) }; \
		}'
